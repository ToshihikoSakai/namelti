// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: namelti.proto

#include "namelti.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_namelti_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_namelti_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResultList_Result;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_namelti_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NameltiTranscriptResponses_ResponsesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_namelti_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ResultList;
}  // namespace protobuf_namelti_2eproto
namespace namelti {
namespace server {
class NameltiTranscriptRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameltiTranscriptRequest>
      _instance;
} _NameltiTranscriptRequest_default_instance_;
class NameltiTranscriptRequestsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameltiTranscriptRequests>
      _instance;
} _NameltiTranscriptRequests_default_instance_;
class ResultList_ResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResultList_Result>
      _instance;
} _ResultList_Result_default_instance_;
class ResultListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResultList>
      _instance;
} _ResultList_default_instance_;
class NameltiTranscriptResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameltiTranscriptResponse>
      _instance;
} _NameltiTranscriptResponse_default_instance_;
class NameltiTranscriptResponses_ResponsesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameltiTranscriptResponses_ResponsesEntry_DoNotUse>
      _instance;
} _NameltiTranscriptResponses_ResponsesEntry_DoNotUse_default_instance_;
class NameltiTranscriptResponsesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameltiTranscriptResponses>
      _instance;
} _NameltiTranscriptResponses_default_instance_;
}  // namespace server
}  // namespace namelti
namespace protobuf_namelti_2eproto {
static void InitDefaultsNameltiTranscriptRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::namelti::server::_NameltiTranscriptRequest_default_instance_;
    new (ptr) ::namelti::server::NameltiTranscriptRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::namelti::server::NameltiTranscriptRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NameltiTranscriptRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNameltiTranscriptRequest}, {}};

static void InitDefaultsNameltiTranscriptRequests() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::namelti::server::_NameltiTranscriptRequests_default_instance_;
    new (ptr) ::namelti::server::NameltiTranscriptRequests();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::namelti::server::NameltiTranscriptRequests::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NameltiTranscriptRequests =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNameltiTranscriptRequests}, {}};

static void InitDefaultsResultList_Result() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::namelti::server::_ResultList_Result_default_instance_;
    new (ptr) ::namelti::server::ResultList_Result();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::namelti::server::ResultList_Result::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResultList_Result =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResultList_Result}, {}};

static void InitDefaultsResultList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::namelti::server::_ResultList_default_instance_;
    new (ptr) ::namelti::server::ResultList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::namelti::server::ResultList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResultList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResultList}, {
      &protobuf_namelti_2eproto::scc_info_ResultList_Result.base,}};

static void InitDefaultsNameltiTranscriptResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::namelti::server::_NameltiTranscriptResponse_default_instance_;
    new (ptr) ::namelti::server::NameltiTranscriptResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::namelti::server::NameltiTranscriptResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NameltiTranscriptResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNameltiTranscriptResponse}, {
      &protobuf_namelti_2eproto::scc_info_ResultList.base,}};

static void InitDefaultsNameltiTranscriptResponses_ResponsesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::namelti::server::_NameltiTranscriptResponses_ResponsesEntry_DoNotUse_default_instance_;
    new (ptr) ::namelti::server::NameltiTranscriptResponses_ResponsesEntry_DoNotUse();
  }
  ::namelti::server::NameltiTranscriptResponses_ResponsesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NameltiTranscriptResponses_ResponsesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNameltiTranscriptResponses_ResponsesEntry_DoNotUse}, {
      &protobuf_namelti_2eproto::scc_info_ResultList.base,}};

static void InitDefaultsNameltiTranscriptResponses() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::namelti::server::_NameltiTranscriptResponses_default_instance_;
    new (ptr) ::namelti::server::NameltiTranscriptResponses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::namelti::server::NameltiTranscriptResponses::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NameltiTranscriptResponses =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNameltiTranscriptResponses}, {
      &protobuf_namelti_2eproto::scc_info_NameltiTranscriptResponses_ResponsesEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_NameltiTranscriptRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NameltiTranscriptRequests.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResultList_Result.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResultList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NameltiTranscriptResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NameltiTranscriptResponses_ResponsesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NameltiTranscriptResponses.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptRequests, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptRequests, queries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::ResultList_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::ResultList_Result, yomi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::ResultList_Result, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::ResultList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::ResultList, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptResponse, surface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptResponse, results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptResponses_ResponsesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptResponses_ResponsesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptResponses_ResponsesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptResponses_ResponsesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::namelti::server::NameltiTranscriptResponses, responses_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::namelti::server::NameltiTranscriptRequest)},
  { 6, -1, sizeof(::namelti::server::NameltiTranscriptRequests)},
  { 12, -1, sizeof(::namelti::server::ResultList_Result)},
  { 19, -1, sizeof(::namelti::server::ResultList)},
  { 25, -1, sizeof(::namelti::server::NameltiTranscriptResponse)},
  { 32, 39, sizeof(::namelti::server::NameltiTranscriptResponses_ResponsesEntry_DoNotUse)},
  { 41, -1, sizeof(::namelti::server::NameltiTranscriptResponses)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::namelti::server::_NameltiTranscriptRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::namelti::server::_NameltiTranscriptRequests_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::namelti::server::_ResultList_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::namelti::server::_ResultList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::namelti::server::_NameltiTranscriptResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::namelti::server::_NameltiTranscriptResponses_ResponsesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::namelti::server::_NameltiTranscriptResponses_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "namelti.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rnamelti.proto\022\016namelti.server\")\n\030Namel"
      "tiTranscriptRequest\022\r\n\005query\030\001 \001(\t\",\n\031Na"
      "meltiTranscriptRequests\022\017\n\007queries\030\001 \003(\t"
      "\"g\n\nResultList\0222\n\007results\030\001 \003(\0132!.namelt"
      "i.server.ResultList.Result\032%\n\006Result\022\014\n\004"
      "yomi\030\001 \001(\t\022\r\n\005score\030\002 \001(\002\"Y\n\031NameltiTran"
      "scriptResponse\022\017\n\007surface\030\001 \001(\t\022+\n\007resul"
      "ts\030\002 \001(\0132\032.namelti.server.ResultList\"\270\001\n"
      "\032NameltiTranscriptResponses\022L\n\tresponses"
      "\030\001 \003(\01329.namelti.server.NameltiTranscrip"
      "tResponses.ResponsesEntry\032L\n\016ResponsesEn"
      "try\022\013\n\003key\030\001 \001(\t\022)\n\005value\030\002 \001(\0132\032.namelt"
      "i.server.ResultList:\0028\0012\342\001\n\016NameltiServi"
      "ce\022d\n\013ConvertName\022(.namelti.server.Namel"
      "tiTranscriptRequest\032).namelti.server.Nam"
      "eltiTranscriptResponse\"\000\022j\n\017ConvertNameL"
      "ist\022).namelti.server.NameltiTranscriptRe"
      "quests\032*.namelti.server.NameltiTranscrip"
      "tResponses\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 740);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "namelti.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_namelti_2eproto
namespace namelti {
namespace server {

// ===================================================================

void NameltiTranscriptRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameltiTranscriptRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameltiTranscriptRequest::NameltiTranscriptRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_namelti_2eproto::scc_info_NameltiTranscriptRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:namelti.server.NameltiTranscriptRequest)
}
NameltiTranscriptRequest::NameltiTranscriptRequest(const NameltiTranscriptRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:namelti.server.NameltiTranscriptRequest)
}

void NameltiTranscriptRequest::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NameltiTranscriptRequest::~NameltiTranscriptRequest() {
  // @@protoc_insertion_point(destructor:namelti.server.NameltiTranscriptRequest)
  SharedDtor();
}

void NameltiTranscriptRequest::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NameltiTranscriptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NameltiTranscriptRequest::descriptor() {
  ::protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameltiTranscriptRequest& NameltiTranscriptRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_namelti_2eproto::scc_info_NameltiTranscriptRequest.base);
  return *internal_default_instance();
}


void NameltiTranscriptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:namelti.server.NameltiTranscriptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool NameltiTranscriptRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:namelti.server.NameltiTranscriptRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "namelti.server.NameltiTranscriptRequest.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:namelti.server.NameltiTranscriptRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:namelti.server.NameltiTranscriptRequest)
  return false;
#undef DO_
}

void NameltiTranscriptRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:namelti.server.NameltiTranscriptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "namelti.server.NameltiTranscriptRequest.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:namelti.server.NameltiTranscriptRequest)
}

::google::protobuf::uint8* NameltiTranscriptRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:namelti.server.NameltiTranscriptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "namelti.server.NameltiTranscriptRequest.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:namelti.server.NameltiTranscriptRequest)
  return target;
}

size_t NameltiTranscriptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:namelti.server.NameltiTranscriptRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NameltiTranscriptRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:namelti.server.NameltiTranscriptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NameltiTranscriptRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameltiTranscriptRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:namelti.server.NameltiTranscriptRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:namelti.server.NameltiTranscriptRequest)
    MergeFrom(*source);
  }
}

void NameltiTranscriptRequest::MergeFrom(const NameltiTranscriptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:namelti.server.NameltiTranscriptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void NameltiTranscriptRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:namelti.server.NameltiTranscriptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameltiTranscriptRequest::CopyFrom(const NameltiTranscriptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:namelti.server.NameltiTranscriptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameltiTranscriptRequest::IsInitialized() const {
  return true;
}

void NameltiTranscriptRequest::Swap(NameltiTranscriptRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameltiTranscriptRequest::InternalSwap(NameltiTranscriptRequest* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NameltiTranscriptRequest::GetMetadata() const {
  protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NameltiTranscriptRequests::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameltiTranscriptRequests::kQueriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameltiTranscriptRequests::NameltiTranscriptRequests()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_namelti_2eproto::scc_info_NameltiTranscriptRequests.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:namelti.server.NameltiTranscriptRequests)
}
NameltiTranscriptRequests::NameltiTranscriptRequests(const NameltiTranscriptRequests& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      queries_(from.queries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:namelti.server.NameltiTranscriptRequests)
}

void NameltiTranscriptRequests::SharedCtor() {
}

NameltiTranscriptRequests::~NameltiTranscriptRequests() {
  // @@protoc_insertion_point(destructor:namelti.server.NameltiTranscriptRequests)
  SharedDtor();
}

void NameltiTranscriptRequests::SharedDtor() {
}

void NameltiTranscriptRequests::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NameltiTranscriptRequests::descriptor() {
  ::protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameltiTranscriptRequests& NameltiTranscriptRequests::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_namelti_2eproto::scc_info_NameltiTranscriptRequests.base);
  return *internal_default_instance();
}


void NameltiTranscriptRequests::Clear() {
// @@protoc_insertion_point(message_clear_start:namelti.server.NameltiTranscriptRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queries_.Clear();
  _internal_metadata_.Clear();
}

bool NameltiTranscriptRequests::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:namelti.server.NameltiTranscriptRequests)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string queries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_queries()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->queries(this->queries_size() - 1).data(),
            static_cast<int>(this->queries(this->queries_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "namelti.server.NameltiTranscriptRequests.queries"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:namelti.server.NameltiTranscriptRequests)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:namelti.server.NameltiTranscriptRequests)
  return false;
#undef DO_
}

void NameltiTranscriptRequests::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:namelti.server.NameltiTranscriptRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string queries = 1;
  for (int i = 0, n = this->queries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->queries(i).data(), static_cast<int>(this->queries(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "namelti.server.NameltiTranscriptRequests.queries");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->queries(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:namelti.server.NameltiTranscriptRequests)
}

::google::protobuf::uint8* NameltiTranscriptRequests::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:namelti.server.NameltiTranscriptRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string queries = 1;
  for (int i = 0, n = this->queries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->queries(i).data(), static_cast<int>(this->queries(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "namelti.server.NameltiTranscriptRequests.queries");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->queries(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:namelti.server.NameltiTranscriptRequests)
  return target;
}

size_t NameltiTranscriptRequests::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:namelti.server.NameltiTranscriptRequests)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string queries = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->queries_size());
  for (int i = 0, n = this->queries_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->queries(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NameltiTranscriptRequests::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:namelti.server.NameltiTranscriptRequests)
  GOOGLE_DCHECK_NE(&from, this);
  const NameltiTranscriptRequests* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameltiTranscriptRequests>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:namelti.server.NameltiTranscriptRequests)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:namelti.server.NameltiTranscriptRequests)
    MergeFrom(*source);
  }
}

void NameltiTranscriptRequests::MergeFrom(const NameltiTranscriptRequests& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:namelti.server.NameltiTranscriptRequests)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  queries_.MergeFrom(from.queries_);
}

void NameltiTranscriptRequests::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:namelti.server.NameltiTranscriptRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameltiTranscriptRequests::CopyFrom(const NameltiTranscriptRequests& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:namelti.server.NameltiTranscriptRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameltiTranscriptRequests::IsInitialized() const {
  return true;
}

void NameltiTranscriptRequests::Swap(NameltiTranscriptRequests* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameltiTranscriptRequests::InternalSwap(NameltiTranscriptRequests* other) {
  using std::swap;
  queries_.InternalSwap(CastToBase(&other->queries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NameltiTranscriptRequests::GetMetadata() const {
  protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResultList_Result::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultList_Result::kYomiFieldNumber;
const int ResultList_Result::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultList_Result::ResultList_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_namelti_2eproto::scc_info_ResultList_Result.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:namelti.server.ResultList.Result)
}
ResultList_Result::ResultList_Result(const ResultList_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  yomi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.yomi().size() > 0) {
    yomi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.yomi_);
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:namelti.server.ResultList.Result)
}

void ResultList_Result::SharedCtor() {
  yomi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_ = 0;
}

ResultList_Result::~ResultList_Result() {
  // @@protoc_insertion_point(destructor:namelti.server.ResultList.Result)
  SharedDtor();
}

void ResultList_Result::SharedDtor() {
  yomi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResultList_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResultList_Result::descriptor() {
  ::protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResultList_Result& ResultList_Result::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_namelti_2eproto::scc_info_ResultList_Result.base);
  return *internal_default_instance();
}


void ResultList_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:namelti.server.ResultList.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  yomi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_ = 0;
  _internal_metadata_.Clear();
}

bool ResultList_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:namelti.server.ResultList.Result)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string yomi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_yomi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->yomi().data(), static_cast<int>(this->yomi().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "namelti.server.ResultList.Result.yomi"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:namelti.server.ResultList.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:namelti.server.ResultList.Result)
  return false;
#undef DO_
}

void ResultList_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:namelti.server.ResultList.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string yomi = 1;
  if (this->yomi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->yomi().data(), static_cast<int>(this->yomi().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "namelti.server.ResultList.Result.yomi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->yomi(), output);
  }

  // float score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:namelti.server.ResultList.Result)
}

::google::protobuf::uint8* ResultList_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:namelti.server.ResultList.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string yomi = 1;
  if (this->yomi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->yomi().data(), static_cast<int>(this->yomi().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "namelti.server.ResultList.Result.yomi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->yomi(), target);
  }

  // float score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:namelti.server.ResultList.Result)
  return target;
}

size_t ResultList_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:namelti.server.ResultList.Result)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string yomi = 1;
  if (this->yomi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->yomi());
  }

  // float score = 2;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultList_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:namelti.server.ResultList.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultList_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultList_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:namelti.server.ResultList.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:namelti.server.ResultList.Result)
    MergeFrom(*source);
  }
}

void ResultList_Result::MergeFrom(const ResultList_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:namelti.server.ResultList.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.yomi().size() > 0) {

    yomi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.yomi_);
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void ResultList_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:namelti.server.ResultList.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultList_Result::CopyFrom(const ResultList_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:namelti.server.ResultList.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultList_Result::IsInitialized() const {
  return true;
}

void ResultList_Result::Swap(ResultList_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultList_Result::InternalSwap(ResultList_Result* other) {
  using std::swap;
  yomi_.Swap(&other->yomi_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResultList_Result::GetMetadata() const {
  protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResultList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultList::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultList::ResultList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_namelti_2eproto::scc_info_ResultList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:namelti.server.ResultList)
}
ResultList::ResultList(const ResultList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:namelti.server.ResultList)
}

void ResultList::SharedCtor() {
}

ResultList::~ResultList() {
  // @@protoc_insertion_point(destructor:namelti.server.ResultList)
  SharedDtor();
}

void ResultList::SharedDtor() {
}

void ResultList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResultList::descriptor() {
  ::protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResultList& ResultList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_namelti_2eproto::scc_info_ResultList.base);
  return *internal_default_instance();
}


void ResultList::Clear() {
// @@protoc_insertion_point(message_clear_start:namelti.server.ResultList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear();
}

bool ResultList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:namelti.server.ResultList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .namelti.server.ResultList.Result results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:namelti.server.ResultList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:namelti.server.ResultList)
  return false;
#undef DO_
}

void ResultList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:namelti.server.ResultList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .namelti.server.ResultList.Result results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->results(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:namelti.server.ResultList)
}

::google::protobuf::uint8* ResultList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:namelti.server.ResultList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .namelti.server.ResultList.Result results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:namelti.server.ResultList)
  return target;
}

size_t ResultList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:namelti.server.ResultList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .namelti.server.ResultList.Result results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:namelti.server.ResultList)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:namelti.server.ResultList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:namelti.server.ResultList)
    MergeFrom(*source);
  }
}

void ResultList::MergeFrom(const ResultList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:namelti.server.ResultList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void ResultList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:namelti.server.ResultList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultList::CopyFrom(const ResultList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:namelti.server.ResultList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultList::IsInitialized() const {
  return true;
}

void ResultList::Swap(ResultList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultList::InternalSwap(ResultList* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResultList::GetMetadata() const {
  protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NameltiTranscriptResponse::InitAsDefaultInstance() {
  ::namelti::server::_NameltiTranscriptResponse_default_instance_._instance.get_mutable()->results_ = const_cast< ::namelti::server::ResultList*>(
      ::namelti::server::ResultList::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameltiTranscriptResponse::kSurfaceFieldNumber;
const int NameltiTranscriptResponse::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameltiTranscriptResponse::NameltiTranscriptResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_namelti_2eproto::scc_info_NameltiTranscriptResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:namelti.server.NameltiTranscriptResponse)
}
NameltiTranscriptResponse::NameltiTranscriptResponse(const NameltiTranscriptResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  surface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.surface().size() > 0) {
    surface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.surface_);
  }
  if (from.has_results()) {
    results_ = new ::namelti::server::ResultList(*from.results_);
  } else {
    results_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:namelti.server.NameltiTranscriptResponse)
}

void NameltiTranscriptResponse::SharedCtor() {
  surface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  results_ = NULL;
}

NameltiTranscriptResponse::~NameltiTranscriptResponse() {
  // @@protoc_insertion_point(destructor:namelti.server.NameltiTranscriptResponse)
  SharedDtor();
}

void NameltiTranscriptResponse::SharedDtor() {
  surface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete results_;
}

void NameltiTranscriptResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NameltiTranscriptResponse::descriptor() {
  ::protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameltiTranscriptResponse& NameltiTranscriptResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_namelti_2eproto::scc_info_NameltiTranscriptResponse.base);
  return *internal_default_instance();
}


void NameltiTranscriptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:namelti.server.NameltiTranscriptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  surface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && results_ != NULL) {
    delete results_;
  }
  results_ = NULL;
  _internal_metadata_.Clear();
}

bool NameltiTranscriptResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:namelti.server.NameltiTranscriptResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string surface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_surface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->surface().data(), static_cast<int>(this->surface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "namelti.server.NameltiTranscriptResponse.surface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .namelti.server.ResultList results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:namelti.server.NameltiTranscriptResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:namelti.server.NameltiTranscriptResponse)
  return false;
#undef DO_
}

void NameltiTranscriptResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:namelti.server.NameltiTranscriptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string surface = 1;
  if (this->surface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->surface().data(), static_cast<int>(this->surface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "namelti.server.NameltiTranscriptResponse.surface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->surface(), output);
  }

  // .namelti.server.ResultList results = 2;
  if (this->has_results()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_results(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:namelti.server.NameltiTranscriptResponse)
}

::google::protobuf::uint8* NameltiTranscriptResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:namelti.server.NameltiTranscriptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string surface = 1;
  if (this->surface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->surface().data(), static_cast<int>(this->surface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "namelti.server.NameltiTranscriptResponse.surface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->surface(), target);
  }

  // .namelti.server.ResultList results = 2;
  if (this->has_results()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_results(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:namelti.server.NameltiTranscriptResponse)
  return target;
}

size_t NameltiTranscriptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:namelti.server.NameltiTranscriptResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string surface = 1;
  if (this->surface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->surface());
  }

  // .namelti.server.ResultList results = 2;
  if (this->has_results()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *results_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NameltiTranscriptResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:namelti.server.NameltiTranscriptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NameltiTranscriptResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameltiTranscriptResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:namelti.server.NameltiTranscriptResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:namelti.server.NameltiTranscriptResponse)
    MergeFrom(*source);
  }
}

void NameltiTranscriptResponse::MergeFrom(const NameltiTranscriptResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:namelti.server.NameltiTranscriptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.surface().size() > 0) {

    surface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.surface_);
  }
  if (from.has_results()) {
    mutable_results()->::namelti::server::ResultList::MergeFrom(from.results());
  }
}

void NameltiTranscriptResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:namelti.server.NameltiTranscriptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameltiTranscriptResponse::CopyFrom(const NameltiTranscriptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:namelti.server.NameltiTranscriptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameltiTranscriptResponse::IsInitialized() const {
  return true;
}

void NameltiTranscriptResponse::Swap(NameltiTranscriptResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameltiTranscriptResponse::InternalSwap(NameltiTranscriptResponse* other) {
  using std::swap;
  surface_.Swap(&other->surface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(results_, other->results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NameltiTranscriptResponse::GetMetadata() const {
  protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

NameltiTranscriptResponses_ResponsesEntry_DoNotUse::NameltiTranscriptResponses_ResponsesEntry_DoNotUse() {}
NameltiTranscriptResponses_ResponsesEntry_DoNotUse::NameltiTranscriptResponses_ResponsesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void NameltiTranscriptResponses_ResponsesEntry_DoNotUse::MergeFrom(const NameltiTranscriptResponses_ResponsesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata NameltiTranscriptResponses_ResponsesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[5];
}
void NameltiTranscriptResponses_ResponsesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void NameltiTranscriptResponses::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameltiTranscriptResponses::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameltiTranscriptResponses::NameltiTranscriptResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_namelti_2eproto::scc_info_NameltiTranscriptResponses.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:namelti.server.NameltiTranscriptResponses)
}
NameltiTranscriptResponses::NameltiTranscriptResponses(const NameltiTranscriptResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  responses_.MergeFrom(from.responses_);
  // @@protoc_insertion_point(copy_constructor:namelti.server.NameltiTranscriptResponses)
}

void NameltiTranscriptResponses::SharedCtor() {
}

NameltiTranscriptResponses::~NameltiTranscriptResponses() {
  // @@protoc_insertion_point(destructor:namelti.server.NameltiTranscriptResponses)
  SharedDtor();
}

void NameltiTranscriptResponses::SharedDtor() {
}

void NameltiTranscriptResponses::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NameltiTranscriptResponses::descriptor() {
  ::protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameltiTranscriptResponses& NameltiTranscriptResponses::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_namelti_2eproto::scc_info_NameltiTranscriptResponses.base);
  return *internal_default_instance();
}


void NameltiTranscriptResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:namelti.server.NameltiTranscriptResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear();
}

bool NameltiTranscriptResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:namelti.server.NameltiTranscriptResponses)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .namelti.server.ResultList> responses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          NameltiTranscriptResponses_ResponsesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              NameltiTranscriptResponses_ResponsesEntry_DoNotUse,
              ::std::string, ::namelti::server::ResultList,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::namelti::server::ResultList > > parser(&responses_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "namelti.server.NameltiTranscriptResponses.ResponsesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:namelti.server.NameltiTranscriptResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:namelti.server.NameltiTranscriptResponses)
  return false;
#undef DO_
}

void NameltiTranscriptResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:namelti.server.NameltiTranscriptResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .namelti.server.ResultList> responses = 1;
  if (!this->responses().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::namelti::server::ResultList >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "namelti.server.NameltiTranscriptResponses.ResponsesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->responses().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->responses().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::namelti::server::ResultList >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::namelti::server::ResultList >::const_iterator
          it = this->responses().begin();
          it != this->responses().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NameltiTranscriptResponses_ResponsesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(responses_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<NameltiTranscriptResponses_ResponsesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::namelti::server::ResultList >::const_iterator
          it = this->responses().begin();
          it != this->responses().end(); ++it) {
        entry.reset(responses_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:namelti.server.NameltiTranscriptResponses)
}

::google::protobuf::uint8* NameltiTranscriptResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:namelti.server.NameltiTranscriptResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .namelti.server.ResultList> responses = 1;
  if (!this->responses().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::namelti::server::ResultList >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "namelti.server.NameltiTranscriptResponses.ResponsesEntry.key");
      }
    };

    if (deterministic &&
        this->responses().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->responses().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::namelti::server::ResultList >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::namelti::server::ResultList >::const_iterator
          it = this->responses().begin();
          it != this->responses().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NameltiTranscriptResponses_ResponsesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(responses_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<NameltiTranscriptResponses_ResponsesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::namelti::server::ResultList >::const_iterator
          it = this->responses().begin();
          it != this->responses().end(); ++it) {
        entry.reset(responses_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:namelti.server.NameltiTranscriptResponses)
  return target;
}

size_t NameltiTranscriptResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:namelti.server.NameltiTranscriptResponses)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .namelti.server.ResultList> responses = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->responses_size());
  {
    ::std::unique_ptr<NameltiTranscriptResponses_ResponsesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::namelti::server::ResultList >::const_iterator
        it = this->responses().begin();
        it != this->responses().end(); ++it) {
      entry.reset(responses_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NameltiTranscriptResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:namelti.server.NameltiTranscriptResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const NameltiTranscriptResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameltiTranscriptResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:namelti.server.NameltiTranscriptResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:namelti.server.NameltiTranscriptResponses)
    MergeFrom(*source);
  }
}

void NameltiTranscriptResponses::MergeFrom(const NameltiTranscriptResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:namelti.server.NameltiTranscriptResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void NameltiTranscriptResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:namelti.server.NameltiTranscriptResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameltiTranscriptResponses::CopyFrom(const NameltiTranscriptResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:namelti.server.NameltiTranscriptResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameltiTranscriptResponses::IsInitialized() const {
  return true;
}

void NameltiTranscriptResponses::Swap(NameltiTranscriptResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameltiTranscriptResponses::InternalSwap(NameltiTranscriptResponses* other) {
  using std::swap;
  responses_.Swap(&other->responses_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NameltiTranscriptResponses::GetMetadata() const {
  protobuf_namelti_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_namelti_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace server
}  // namespace namelti
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::namelti::server::NameltiTranscriptRequest* Arena::CreateMaybeMessage< ::namelti::server::NameltiTranscriptRequest >(Arena* arena) {
  return Arena::CreateInternal< ::namelti::server::NameltiTranscriptRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::namelti::server::NameltiTranscriptRequests* Arena::CreateMaybeMessage< ::namelti::server::NameltiTranscriptRequests >(Arena* arena) {
  return Arena::CreateInternal< ::namelti::server::NameltiTranscriptRequests >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::namelti::server::ResultList_Result* Arena::CreateMaybeMessage< ::namelti::server::ResultList_Result >(Arena* arena) {
  return Arena::CreateInternal< ::namelti::server::ResultList_Result >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::namelti::server::ResultList* Arena::CreateMaybeMessage< ::namelti::server::ResultList >(Arena* arena) {
  return Arena::CreateInternal< ::namelti::server::ResultList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::namelti::server::NameltiTranscriptResponse* Arena::CreateMaybeMessage< ::namelti::server::NameltiTranscriptResponse >(Arena* arena) {
  return Arena::CreateInternal< ::namelti::server::NameltiTranscriptResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::namelti::server::NameltiTranscriptResponses_ResponsesEntry_DoNotUse* Arena::CreateMaybeMessage< ::namelti::server::NameltiTranscriptResponses_ResponsesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::namelti::server::NameltiTranscriptResponses_ResponsesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::namelti::server::NameltiTranscriptResponses* Arena::CreateMaybeMessage< ::namelti::server::NameltiTranscriptResponses >(Arena* arena) {
  return Arena::CreateInternal< ::namelti::server::NameltiTranscriptResponses >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
