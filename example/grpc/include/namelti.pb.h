// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: namelti.proto

#ifndef PROTOBUF_namelti_2eproto__INCLUDED
#define PROTOBUF_namelti_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace namelti {
namespace server {
class MapVaule;
class MapVauleDefaultTypeInternal;
extern MapVauleDefaultTypeInternal _MapVaule_default_instance_;
class NameltiTranscriptRequest;
class NameltiTranscriptRequestDefaultTypeInternal;
extern NameltiTranscriptRequestDefaultTypeInternal _NameltiTranscriptRequest_default_instance_;
class NameltiTranscriptResponse;
class NameltiTranscriptResponseDefaultTypeInternal;
extern NameltiTranscriptResponseDefaultTypeInternal _NameltiTranscriptResponse_default_instance_;
}  // namespace server
}  // namespace namelti

namespace namelti {
namespace server {

namespace protobuf_namelti_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_namelti_2eproto

// ===================================================================

class NameltiTranscriptRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:namelti.server.NameltiTranscriptRequest) */ {
 public:
  NameltiTranscriptRequest();
  virtual ~NameltiTranscriptRequest();

  NameltiTranscriptRequest(const NameltiTranscriptRequest& from);

  inline NameltiTranscriptRequest& operator=(const NameltiTranscriptRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NameltiTranscriptRequest& default_instance();

  static inline const NameltiTranscriptRequest* internal_default_instance() {
    return reinterpret_cast<const NameltiTranscriptRequest*>(
               &_NameltiTranscriptRequest_default_instance_);
  }

  void Swap(NameltiTranscriptRequest* other);

  // implements Message ----------------------------------------------

  inline NameltiTranscriptRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  NameltiTranscriptRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NameltiTranscriptRequest& from);
  void MergeFrom(const NameltiTranscriptRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NameltiTranscriptRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string queries = 1;
  int queries_size() const;
  void clear_queries();
  static const int kQueriesFieldNumber = 1;
  const ::std::string& queries(int index) const;
  ::std::string* mutable_queries(int index);
  void set_queries(int index, const ::std::string& value);
  void set_queries(int index, const char* value);
  void set_queries(int index, const char* value, size_t size);
  ::std::string* add_queries();
  void add_queries(const ::std::string& value);
  void add_queries(const char* value);
  void add_queries(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& queries() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_queries();

  // @@protoc_insertion_point(class_scope:namelti.server.NameltiTranscriptRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> queries_;
  mutable int _cached_size_;
  friend struct  protobuf_namelti_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MapVaule : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:namelti.server.MapVaule) */ {
 public:
  MapVaule();
  virtual ~MapVaule();

  MapVaule(const MapVaule& from);

  inline MapVaule& operator=(const MapVaule& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapVaule& default_instance();

  static inline const MapVaule* internal_default_instance() {
    return reinterpret_cast<const MapVaule*>(
               &_MapVaule_default_instance_);
  }

  void Swap(MapVaule* other);

  // implements Message ----------------------------------------------

  inline MapVaule* New() const PROTOBUF_FINAL { return New(NULL); }

  MapVaule* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MapVaule& from);
  void MergeFrom(const MapVaule& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MapVaule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string dict = 1;
  int dict_size() const;
  void clear_dict();
  static const int kDictFieldNumber = 1;
  const ::std::string& dict(int index) const;
  ::std::string* mutable_dict(int index);
  void set_dict(int index, const ::std::string& value);
  void set_dict(int index, const char* value);
  void set_dict(int index, const char* value, size_t size);
  ::std::string* add_dict();
  void add_dict(const ::std::string& value);
  void add_dict(const char* value);
  void add_dict(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& dict() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dict();

  // @@protoc_insertion_point(class_scope:namelti.server.MapVaule)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dict_;
  mutable int _cached_size_;
  friend struct  protobuf_namelti_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class NameltiTranscriptResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:namelti.server.NameltiTranscriptResponse) */ {
 public:
  NameltiTranscriptResponse();
  virtual ~NameltiTranscriptResponse();

  NameltiTranscriptResponse(const NameltiTranscriptResponse& from);

  inline NameltiTranscriptResponse& operator=(const NameltiTranscriptResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NameltiTranscriptResponse& default_instance();

  static inline const NameltiTranscriptResponse* internal_default_instance() {
    return reinterpret_cast<const NameltiTranscriptResponse*>(
               &_NameltiTranscriptResponse_default_instance_);
  }

  void Swap(NameltiTranscriptResponse* other);

  // implements Message ----------------------------------------------

  inline NameltiTranscriptResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  NameltiTranscriptResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NameltiTranscriptResponse& from);
  void MergeFrom(const NameltiTranscriptResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NameltiTranscriptResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .namelti.server.MapVaule> results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::namelti::server::MapVaule >&
      results() const;
  ::google::protobuf::Map< ::std::string, ::namelti::server::MapVaule >*
      mutable_results();

  // @@protoc_insertion_point(class_scope:namelti.server.NameltiTranscriptResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::namelti::server::MapVaule,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      NameltiTranscriptResponse_ResultsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::namelti::server::MapVaule,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > results_;
  mutable int _cached_size_;
  friend struct  protobuf_namelti_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NameltiTranscriptRequest

// repeated string queries = 1;
inline int NameltiTranscriptRequest::queries_size() const {
  return queries_.size();
}
inline void NameltiTranscriptRequest::clear_queries() {
  queries_.Clear();
}
inline const ::std::string& NameltiTranscriptRequest::queries(int index) const {
  // @@protoc_insertion_point(field_get:namelti.server.NameltiTranscriptRequest.queries)
  return queries_.Get(index);
}
inline ::std::string* NameltiTranscriptRequest::mutable_queries(int index) {
  // @@protoc_insertion_point(field_mutable:namelti.server.NameltiTranscriptRequest.queries)
  return queries_.Mutable(index);
}
inline void NameltiTranscriptRequest::set_queries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:namelti.server.NameltiTranscriptRequest.queries)
  queries_.Mutable(index)->assign(value);
}
inline void NameltiTranscriptRequest::set_queries(int index, const char* value) {
  queries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:namelti.server.NameltiTranscriptRequest.queries)
}
inline void NameltiTranscriptRequest::set_queries(int index, const char* value, size_t size) {
  queries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:namelti.server.NameltiTranscriptRequest.queries)
}
inline ::std::string* NameltiTranscriptRequest::add_queries() {
  // @@protoc_insertion_point(field_add_mutable:namelti.server.NameltiTranscriptRequest.queries)
  return queries_.Add();
}
inline void NameltiTranscriptRequest::add_queries(const ::std::string& value) {
  queries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:namelti.server.NameltiTranscriptRequest.queries)
}
inline void NameltiTranscriptRequest::add_queries(const char* value) {
  queries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:namelti.server.NameltiTranscriptRequest.queries)
}
inline void NameltiTranscriptRequest::add_queries(const char* value, size_t size) {
  queries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:namelti.server.NameltiTranscriptRequest.queries)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NameltiTranscriptRequest::queries() const {
  // @@protoc_insertion_point(field_list:namelti.server.NameltiTranscriptRequest.queries)
  return queries_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NameltiTranscriptRequest::mutable_queries() {
  // @@protoc_insertion_point(field_mutable_list:namelti.server.NameltiTranscriptRequest.queries)
  return &queries_;
}

// -------------------------------------------------------------------

// MapVaule

// repeated string dict = 1;
inline int MapVaule::dict_size() const {
  return dict_.size();
}
inline void MapVaule::clear_dict() {
  dict_.Clear();
}
inline const ::std::string& MapVaule::dict(int index) const {
  // @@protoc_insertion_point(field_get:namelti.server.MapVaule.dict)
  return dict_.Get(index);
}
inline ::std::string* MapVaule::mutable_dict(int index) {
  // @@protoc_insertion_point(field_mutable:namelti.server.MapVaule.dict)
  return dict_.Mutable(index);
}
inline void MapVaule::set_dict(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:namelti.server.MapVaule.dict)
  dict_.Mutable(index)->assign(value);
}
inline void MapVaule::set_dict(int index, const char* value) {
  dict_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:namelti.server.MapVaule.dict)
}
inline void MapVaule::set_dict(int index, const char* value, size_t size) {
  dict_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:namelti.server.MapVaule.dict)
}
inline ::std::string* MapVaule::add_dict() {
  // @@protoc_insertion_point(field_add_mutable:namelti.server.MapVaule.dict)
  return dict_.Add();
}
inline void MapVaule::add_dict(const ::std::string& value) {
  dict_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:namelti.server.MapVaule.dict)
}
inline void MapVaule::add_dict(const char* value) {
  dict_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:namelti.server.MapVaule.dict)
}
inline void MapVaule::add_dict(const char* value, size_t size) {
  dict_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:namelti.server.MapVaule.dict)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MapVaule::dict() const {
  // @@protoc_insertion_point(field_list:namelti.server.MapVaule.dict)
  return dict_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MapVaule::mutable_dict() {
  // @@protoc_insertion_point(field_mutable_list:namelti.server.MapVaule.dict)
  return &dict_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// NameltiTranscriptResponse

// map<string, .namelti.server.MapVaule> results = 1;
inline int NameltiTranscriptResponse::results_size() const {
  return results_.size();
}
inline void NameltiTranscriptResponse::clear_results() {
  results_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::namelti::server::MapVaule >&
NameltiTranscriptResponse::results() const {
  // @@protoc_insertion_point(field_map:namelti.server.NameltiTranscriptResponse.results)
  return results_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::namelti::server::MapVaule >*
NameltiTranscriptResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_map:namelti.server.NameltiTranscriptResponse.results)
  return results_.MutableMap();
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace server
}  // namespace namelti

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_namelti_2eproto__INCLUDED
